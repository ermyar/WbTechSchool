
services:
  postgres:
    restart: on-failure
    container_name: level0-postgres
    image: postgres:latest
    environment: 
      POSTGRES_DB: "${DB_NAME}"
      POSTGRES_USER: "${PG_USER}"
      POSTGRES_PASSWORD: "${PG_PASS}"
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ./scripts/postgres_init.sql:/docker-entrypoint-initdb.d/postgres_init.sql

  app:
    restart: on-failure
    container_name: level0-app
    build: .  
    ports:
      - "${APP_PORT}:8080"
    environment: 
      POSTGRES_NAME: "${DB_NAME}"
      POSTGRES_USER: "${PG_USER}"
      POSTGRES_PASS: "${PG_PASS}"
      KAFKA_CONSUME_TOPIC: "orders"
      KAFKA_BROKERS: "kafka1:29091"
      LRU_CAPACITY: 1000
    depends_on:
      - postgres
      - kafka-ui

  zookeeper:
    image: confluentinc/cp-zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ZOOKEEPER_CLIENT_PORT: "2181"

  kafka1:
    image: confluentinc/cp-kafka:7.2.15
    container_name: kafka1
    ports:
      - "9091:9091"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9091,PLAINTEXT_HOST://kafka1:29091
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper


  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka1
    ports:
      - "9090:8080"
    environment:
      AUTH_TYPE: DISABLED
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:29091
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
